class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        Arrays.sort(nums);
        
        if (nums.length < 3){
            return result;
        }
        if(nums.length == 3){
            if (nums[0] + nums[1] + nums[2] == 0){
                result.add(Arrays.asList(nums[0], nums[1], nums[2]));
                return result;
            }
        }
        
        for (int base = 0;base < nums.length - 3;base++){
            if(nums[base] > 0)
                return result;
            //起点去重
            if(base > 0 && nums[base] == nums[base - 1]){
                continue;
            }
            
            int left = base + 1;
            int right = nums.length - 1;
            List<Integer> temp = null;
            
            while (left < right){
                if (nums[left] + nums[right] + nums[base] == 0){
                    temp = Arrays.asList(nums[base], nums[left], nums[right]);
                    result.add(temp);
                    //左右去重
                    while (left < right && nums[left + 1] == nums[left])
                        left++;
                    while (left < right && nums[right - 1] == nums[right])
                        right--;
                    left++;
                    right--;
                }
                else if (nums[left] + nums[right] + nums[base] < 0)
                    left++;
                else if (nums[left] + nums[right] + nums[base] > 0)
                    right--;
            }
        }
        return result;
    }
}
