第一种方法
//双重循环
class Solution {
    public void rotate(int[] nums, int k) {
        int length=nums.length;
        int temp=0;
        for(int i=0;i<k;i++){
                temp=nums[length-1];
            for(int x=length-2;x>=0;x--){
                nums[x+1]=nums[x];
            }
            nums[0]=temp;
        }
    }
    
}

第二种  十分巧妙的一种方式
 /**
     * 翻转
     * 时间复杂度：O(n)
     * 空间复杂度：O(1)
     */
    public void rotate_2(int[] nums, int k) {
        int n = nums.length;
        k %= n;
        reverse(nums, 0, n - 1);
        reverse(nums, 0, k - 1);
        reverse(nums, k, n - 1);
    }


    private void reverse(int[] nums, int start, int end) {
        while (start < end) {
            int temp = nums[start];
            nums[start++] = nums[end];
            nums[end--] = temp;
        }
    }
