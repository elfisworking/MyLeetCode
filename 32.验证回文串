//一个超级慢的方法
class Solution {
    public boolean isPalindrome(String s) {
        if(s==null) return false;
        if(s.length()==0)  return true;
        String s1= s.replaceAll("[^a-zA-Z|0-9]", "").toLowerCase();
       char [] arrays= s1.toCharArray();
        for(int i=0;i<arrays.length/2;i++){
            if(arrays[i]!=arrays[s1.length()-1-i]) return false;
        }
        return true;
    } 
}

//两头指针的方法
class Solution {
    public boolean isPalindrome(String s) {
         if (s == null) return false;
        if (s.length() == 0) return true;
        int i = 0;
        int j = s.length() - 1;
        while (i < j) {
            while (i < j && !Character.isLetterOrDigit(s.charAt(i))) i++;
            while (i < j && !Character.isLetterOrDigit(s.charAt(j))) j--;
            if (Character.toLowerCase(s.charAt(i)) != Character.toLowerCase(s.charAt(j))) return false;
            i++;
            j--;
        }
        return true;
    } 
}
